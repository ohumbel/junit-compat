import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'net.nemerosa:versioning:1.7.1'
    }
}

configurations {
    asciidoclet
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'net.nemerosa.versioning'

group = 'net.reini'

defaultTasks 'build'


Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

repositories {
    mavenCentral()
}

asciidoctorj { 
    version '1.5.5'
}

dependencies {
    compile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testCompile "org.jmockit:jmockit:1.23"
    testCompile "org.easymock:easymock:3.4"
    asciidoclet 'org.asciidoctor:asciidoclet:1.+'
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { project.hasProperty('signing.password') && !project.version.contains('-SNAPSHOT') }
    sign configurations.archives
}

jar {
    manifest {
        attributes 'Implementation-Title': 'JUnit compatibility classes',
                   'Implementation-Version': version,
                   'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
                   'Build-Date': buildDate,
                   'Build-Time': buildTime,
                   'Build-Revision': versioning.info.commit,
                   'Specification-Title': project.name,
                   'Specification-Version': project.version,
                   'Specification-Vendor': 'reini.net',
                   'Automatic-Module-Name': "net.reini.junit"
        metaInf {
            from file('.')
            include 'LICENSE'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

javadoc {
    options.docletpath = configurations.asciidoclet.files.asType(List)
    options.doclet = 'org.asciidoctor.Asciidoclet'
    options.addStringOption "-base-dir", "${projectDir}"
    options.addStringOption "-attribute",
            "name=${project.name}," +
            "version=${project.version}," +
            "title-link=http://github.com/reinhapa/[${project.name} ${project.version}]"
}

uploadArchives {
    if (!project.hasProperty('signing.password')) {
        println "no archives will be uploaded due missing signing password"
        return
    }
    repositories.mavenDeployer {
        beforeDeployment { 
            MavenDeployment deployment -> signing.signPom(deployment)
        }

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
            name 'JUnit compatibility classes'
            packaging 'jar'
            description 'Provides partial backwards compatibility classes in order to more easier migrate to a newer JUnit version.'
            url 'https://github.com/reinhapa/junit-compat'
            
            scm {
                connection 'scm:git:git@github.com:reinhapa/junit-compat.git'
                developerConnection 'scm:git:git@github.com:reinhapa/junit-compat.git'
                url 'https://github.com/reinhapa/junit-compat.git'
            }

            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }

            developers {[
                developer {
                    id 'reinhapa'
                    name 'Patrick Reinhart'
                    email 'patrick@reini.net'
                },
                developer {
                    id 'ohumbel'
                    name 'Otmar Humbel'
                    email 'ohumbel@gmail.com'
                }
            ]}
        }
    }
}
